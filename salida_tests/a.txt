Terminales = { &&  = == + id id++ ( ) ent cad false true , ; { } output input return if var int boolean string for function void ? }
NoTerminales = { A B C E F H K L P Q R S T U V X Z F1 F2 F3 F4 }

Axioma = P
Producciones = {
    P -> B P
    P -> F P
    P ->  ? 
    E -> E && R
    E -> R
    R -> R == U
    R -> U
    U -> U + V
    U -> V
    V -> id
    V -> ( E )
    V -> id ( L )
    V -> ent
    V -> cad
    V -> id++
    V -> true
    V -> false
    L -> E  Q
    L ->  ? 
    Q -> , E Q
    Q ->  ? 
    S -> F1
    S -> id ( L ) ;
    S -> output E ;
    S -> input id ;
    S -> return X ;
    X -> E
    X ->  ? 
    F1 -> id = E ;
    F1 ->  ? 
    B -> if ( E ) S
    B -> var T id ;
    T -> int
    T -> boolean
    T -> string
    B -> S
    B -> for ( F1 ; E ; A ) { C }
    A -> F1
    A -> id++
    A ->  ? 
    C -> B C
    C -> lambda
    F -> function F2 F3 F4 { C }
    F2 -> H
    F3 -> id
    F4 -> ( Z )
    H -> T
    H -> void
    Z -> T id K
    Z -> void
    K -> , T id K
    K ->  ? 
}