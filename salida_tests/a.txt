Terminales = { &&  = == + id id++ ( ) ent cad false true , ; { } output input return if var int boolean string for function void  ? }
NoTerminales = { A B C E E1 F H K L P P1 Q R R1 S S1 T U U1 V V1 X Z F1 F2 F3 F4 F5 }

Axioma = P
Producciones = {
    P -> B P
    P -> F P
    P -> ?
    P1 -> P
    B -> var T id ;
    T -> int
    T -> boolean
    T -> string
    F -> function H id ( Z ) { C F5 }
    F5 -> S1
    F5 -> ?
    F2 -> H
    F3 -> id
    F4 -> ( Z )
    H -> T
    H -> void
    Z -> T id K
    Z -> void
    K -> , T id K
    K -> ?

    E -> R E1
    E1 -> && R E1
    E1 -> ?
    R -> U R1
    R1 -> == U R1
    R1 -> ?
    U -> V U1
    U1 -> + V U1
    U1 -> ?
    V -> id
    V -> id++
    V -> id ( L )
    V -> ( E )
    V -> ent
    V -> cad
    V -> true
    V -> false
    L -> E Q
    L -> ?
    Q -> , E Q
    Q -> ?
    S -> id = E ;
    S -> id ( L ) ;
    S -> output E ;
    S -> input id ;
    S -> S1 ;
    S1 -> return X
    X -> E
    X -> ?
    F1 -> id = E
    F1 -> ?
    B -> if ( E ) S
    B -> S
    B -> for ( F1 ; E ; A ) { C }
    A -> F1
    A -> id++
    A -> ?
    C -> B C
    C -> ?
}